#version 330 core

layout (location = 0) in vec3 position;
layout (location = 1) in vec4 color;

layout (std140) uniform Matrices {
	uniform mat4 view;
	uniform mat4 projection;
	uniform float farPlane;
};

out VS_OUT {
	vec3 FragPos;
	vec4 Color;
	float Depth;
} vs_out;

uniform mat4 model;

void main() {
	gl_Position = projection * view * model * vec4(position.xyz, 1.0);
	vs_out.Depth = -(view * model * vec4(position.xyz, 1.0)).z / farPlane;
	vs_out.Color =  color;
	vs_out.FragPos = vec3(model * vec4(position.xyz, 1.0));
}