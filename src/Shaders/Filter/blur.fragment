#version 330 core

out vec4 color;

in vec2 TexCoords;


float[] gaussian = float[11](0.009, 0.028, 0.06, 0.12, 0.17, 0.2, 0.17, 0.12, 0.06, 0.28, 0.009);


uniform sampler2D targetTexture;

vec4 blur(sampler2D texture, vec2 coords);

void main() {
	color = blur(targetTexture, TexCoords);
}

vec4 blur(sampler2D tex, vec2 coords) {
	int samples = 5;

	vec4 color = vec4(0.0);
	vec2 texelSize = 1.0 / textureSize(tex, 0);	
	for(int x = -samples; x <= samples; x++) {
		color += vec4(texture(tex, coords + vec2(x, 0) * texelSize).rgba) * gaussian[(x + samples)];
	}

	for(int y = -samples; y <= samples; y++) {
		color += vec4(texture(tex, coords + vec2(0, y) * texelSize).rgba) * gaussian[(y + samples)];
	}
	color /= ((2 * samples + 1) + (2 * samples + 1));
	return color;
}