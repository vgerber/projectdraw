#version 330 core

layout (location = 0) in vec3 position;
layout (location = 1) in vec3 normal;

layout (std140) uniform Matrices {
	uniform mat4 view;
	uniform mat4 projection;
	uniform float farPlane;
};

out VS_OUT {
	vec3 Normal;
	vec3 FragPos;
	float Depth;
} vs_out;

uniform mat4 model;
uniform mat4 mvp;


void main() {
	gl_Position = mvp * vec4(position.x, position.y, position.z, 1.0f);
	mat3 normalMatrix = mat3(transpose(inverse(view * model)));
	vs_out.Normal = normalize(vec3(projection * vec4(normalMatrix * normal, 1.0)));
	vs_out.FragPos = vec3(model * vec4(position, 1.0f));
}