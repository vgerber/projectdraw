#version 330 core

struct DirLight {
	float intensity;
	vec3 direction;

	vec3 ambient;
	vec3 diffuse;
	vec3 specular;
};



vec3 CalcDirLight(DirLight light, vec3 normal, vec3 viewDir, vec4 fragPosLightSpace vec3 color) {
	vec3 lightDir = normalize(-light.direction);
	float diff = max(dot(normal, lightDir), 0.0);

	// Specular
    vec3 reflectDir = reflect(-lightDir, normal);  
	vec3 halfWayDir = normalize(lightDir + viewDir);
    float spec = pow(max(dot(normal, halfWayDir), 0.0), 32.0f);


    vec3 diffuse = light.diffuse * diff *  color.rgb;
    vec3 specular = light.specular * spec * color.rgb;  
	vec3 ambient = light.ambient * clor.rgb;

	float bias = max(1 * (1.0 - dot(normal, lightDir)), 1);


	return (ambient + diffuse + specular);
}